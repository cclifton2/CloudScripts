AWSTemplateFormatVersion: "2010-09-09"
Description:  Example of a Full Stack build using yaml
Parameters:
    KeyPair:
        Description: Amazon EC2 Key Pair
        Type: AWS::EC2::KeyPair::KeyName
Mappings:
    RegionMap:
        us-east-1:
            AMI: ami-04681a1dbd79675a5
        us-east-2:
            AMI: ami-0b59bfac6be064b78
Resources:
    VPCWeb:
        Type: AWS::EC2::VPC
        Properties:
            CidrBlock: 10.1.0.0/16
            EnableDnsSupport: true
            EnableDnsHostnames: false
            InstanceTenancy: default
            Tags:
            - Key: Name
              Value: CliftonTestWebVpc
    InternetGateway:
        Type: AWS::EC2::InternetGateway
        Properties:
            Tags:
            - Key: Name
              Value: CliftonIGWWebVPC
    VPCGatewayAttachment:
        Type: AWS::EC2::VPCGatewayAttachment
        Properties:
            VpcId: !Ref VPCWeb
            InternetGatewayId: !Ref InternetGateway
    SubnetWeb01:
        Type: AWS::EC2::Subnet
        Properties:
            AvailabilityZone: us-east-2a
            VpcId: !Ref VPCWeb
            CidrBlock: 10.1.1.0/24
            MapPublicIpOnLaunch: true
            Tags:
            - Key: Name
              Value: CliftonSubnetWeb01
    SubnetWeb02:
        Type: AWS::EC2::Subnet
        Properties:
            AvailabilityZone: us-east-2b
            VpcId: !Ref VPCWeb
            CidrBlock: 10.1.2.0/24
            MapPublicIpOnLaunch: true
            Tags:
            - Key: Name
              Value: CliftonWebSubnet02
    SubnetWeb03:
        Type: AWS::EC2::Subnet
        Properties:
            AvailabilityZone: us-east-2c
            VpcId: !Ref VPCWeb
            CidrBlock: 10.1.3.0/24
            MapPublicIpOnLaunch: true
            Tags:
            - Key: Name
              Value: CliftonWebSubnet03
    RouteTable:
        Type: AWS::EC2::RouteTable
        Properties:
            VpcId: !Ref VPCWeb
            Tags:
            - Key: Name
              Value: CliftonRouteTable
    InternetRoute:
        Type: AWS::EC2::Route
        DependsOn: InternetGateway
        Properties:
            DestinationCidrBlock: 0.0.0.0/0
            GatewayId: !Ref InternetGateway
            RouteTableId: !Ref RouteTable
    SubnetWeb01RouteTableAssociation:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref RouteTable
            SubnetId: !Ref SubnetWeb01
    SubnetWeb02RouteTableAssociation:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref RouteTable
            SubnetId: !Ref SubnetWeb02
    SubnetWeb03RouteTableAssociation:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref RouteTable
            SubnetId: !Ref SubnetWeb03
    LoadBalancer: # Application Load Balancer
        Type: AWS::ElasticLoadBalancingV2::LoadBalancer
        Properties:
            SecurityGroups:
            - !Ref ALBSecurityGroup
            Subnets:
            - !Ref SubnetWeb01
            - !Ref SubnetWeb02
            - !Ref SubnetWeb03
            Tags:
            - Key: Name
              Value: CliftonALB
    LoadBalancerListener: # Port 80 Listener for ALB
        Type: AWS::ElasticLoadBalancingV2::Listener
        Properties:
            LoadBalancerArn: !Ref LoadBalancer
            Port: 80
            Protocol: HTTP
            DefaultActions:
            - Type: forward
              TargetGroupArn:
                  Ref: TargetGroup
    TargetGroup:
        Type: AWS::ElasticLoadBalancingV2::TargetGroup
        Properties:
            Port: 80
            Protocol: HTTP
            VpcId: !Ref VPCWeb
            Tags:
            - Key: Name
              Value: CliftonTargetGroup
    AutoScalingGroup:
        Type: AWS::AutoScaling::AutoScalingGroup
        Properties:
            AvailabilityZones: !GetAZs
            LaunchConfigurationName: !Ref LaunchConfiguration
            MinSize: 2
            MaxSize: 6
            VPCZoneIdentifier:
            - !Ref SubnetWeb01
            - !Ref SubnetWeb02
            - !Ref SubnetWeb03
            TargetGroupARNs:
            - !Ref TargetGroup
            Tags:
            - Key: Name
              Value: CliftonEC2Instance
              PropagateAtLaunch: 'true'
    LaunchConfiguration:
        Type: AWS::AutoScaling::LaunchConfiguration
        Metadata:
            Comment: Install php and httpd
            AWS::CloudFormation::Init:
                config:
                    packages:
                        yum:
                            httpd: []
                            php: []
                    files:
                        /var/www/html/index.php
                    content: !Sub |
                        <?php print "Hello world - Chris was here!"; ?>
                    services:
                        sysvinit:
                            httpd:
                                enabled: true
                                ensureRunning: true
        Properties:
            AssociatePublicIpAddress: true
            KeyName: !Ref KeyPair
            InstanceType: t2.micro
            SecurityGroups:
            - !Ref EC2SecurityGroup
            ImageId:
                Fn::FindInMap:
                - RegionMap
                - !Ref AWS::Region
                - AMI
            UserData:
                'Fn::Base64':
                  !Sub |
                    #!/bin/bash -xe
                    # Ensure AWS CFN Bootstrap is the latest
                    yum install -y aws-cfn-bootstrap
                    # Install the files and packages from the metadata
                    /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource LaunchConfiguration --region ${AWS::Region}
    ALBSecurityGroup:
        Type: AWS::EC2::SecurityGroup
        Properties:
            GroupDescription: ALB Security Group
            VpcId: !Ref VPCWeb
            SecurityGroupIngress:
            - IpProtocol: tcp
              FromPort: 80
              ToPort: 80
              CidrIp: 0.0.0.0/0
            Tags:
            - Key: Name
              Value: CliftonALBSecurityGroup
    EC2SecurityGroup:
        Type: AWS::EC2::SecurityGroup
        Properties:
            GroupDescription: EC2 Instance
            VpcId: !Ref VPCWeb
            Tags:
            - Key: Name
              Value: CliftonEC2SecurityGroup
    EC2InboundRule:  #EC2 can only accept traffic from ALB
        Type: AWS::EC2::SecurityGroupIngress
        Properties:
            IpProtocol: tcp
            FromPort: 80
            ToPort: 80
            SourceSecurityGroupId:
              !GetAtt
            - ALBSecurityGroup
            - GroupId
            GroupId:
              !GetAtt
            - EC2SecurityGroup
            - GroupId
Outputs:
    PublicDns:
        Description: The Public DNS
        Value: !Sub 'http://${LoadBalancer.DNSName}'
